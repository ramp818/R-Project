setwd(...)
setwd("~/Desktop/Fundamentals of statistics/Assignments/dataset for assignments/TEMPERATURE")
data <- read.table("temperature.txt", header=TRUE)
dim(data)
head(data)
attach(data)
n <- length(data)
n <- length(Temperature)
?hist
# 1) Give suitable representation of the variables "Temperature" and "Cardiac Frequency"  (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature", xlab='Concentration [mmol/l]',ylab='Density')
head(data)
# 1) Give suitable representation of the variables "Temperature" and "Cardiac Frequency"  (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Fre')
head(data)
hist(CardFreq, probability = TRUE, main = "Cardiac Frequency Histogram", xlab='Cardiac Frequency',ylab='Fre')
# 1) Give suitable representation of the variables "Temperature" and "Cardiac Frequency"  (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency')
hist(CardFreq, probability = TRUE, main = "Cardiac Frequency Histogram", xlab='Cardiac Frequency',ylab='Frequency')
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(1:5))
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(1,5))
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(0,0.5,0.75))
# 1) Give suitable representation of the variables "Temperature" and "Cardiac Frequency"  (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency')
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(0,0.1,0.2,0.3))
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(0,0.1,0.2,0.3))
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 0.1 )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 1 )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 2 )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(1,2,3,4) )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(1,2,3) )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(1,2) )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = seq(0,0.95,.005) )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = seq(0,4,1) )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4 )
# 1) Give suitable representation of the variables "Temperature" and "Cardiac Frequency"  (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency')
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4 )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 3 )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4 )
# 1) Give suitable representation of the variables "Temperature" and "Cardiac Frequency"  (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency')
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4 )
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4 , right = FALSE)
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 3)
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4)
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4)
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(96,97,98,101))
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(96,97,98,99))
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = c(96,97,98,101))
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 3
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 3)
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4)
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 3)
# 2) Modify the number of classes for the variable Temperature in order to have only 4 classes for the entire range. Is it a better or worse representation of the variable? Why?   (1.5 points)
hist(Temperature, probability = TRUE, main = "Temperature Histogram", xlab='Temperature',ylab='Frequency', breaks = 4)
rm(list =ls()) #remove all objects
#load libraries
library(ggplot2)
library(readr)
library(dplyr)
library(tidyr)
library(forcats)
library(ggmosaic)
install.packages("readr")
#load libraries
library(ggplot2)
library(readr)
library(dplyr)
install.packages("dplyr")
#load libraries
library(ggplot2)
library(readr)
library(dplyr)
install.packages("tidyr")
install.packages("forcats")
install.packages("ggmosaic")
rm(list =ls()) #remove all objects
#load libraries
library(ggplot2)
library(readr)
library(dplyr)
library(tidyr)
library(forcats)
library(ggmosaic)
titanic = read.csv("titanic.csv",header = TRUE,sep = ";") #read the datafile
titanic = read.csv("titanic.csv",header = TRUE,sep = ";") #read the datafile
titanic = titanic[-nrow(titanic),] #remove last line that is only NA
titanic$age = as.vector(titanic$age) #make age to a vector
titanic$age[titanic$age == ""] = NA #remove the empty strings for age and replace with NA
titanic$age = gsub(",",".",titanic$age) #change the seperator to . instead of ,
titanic$age = as.numeric(titanic$age) #change the vector to numeric
titanic$age = round(titanic$age) #round up
titanic$fare = gsub(",",".",titanic$fare) #change seperator
titanic$fare = as.vector(titanic$fare) #make into a vector
titanic$fare[titanic$fare == ""] = NA #make missing values NA
titanic$fare = as.numeric(titanic$fare) #make numeric
class(titanic$fare)
#cleaning the mistakes in boats
titanic$boat<-gsub("13 15","13",titanic$boat)
titanic$boat<-gsub("13 15 B","13",titanic$boat)
titanic$boat<-gsub("13 B","13",titanic$boat)
titanic$boat<-gsub("5 7","5",titanic$boat)
titanic$boat<-gsub("5 9","9",titanic$boat)
titanic$boat<-gsub("15 16","15",titanic$boat)
titanic$boat<-gsub("8 10","8",titanic$boat)
#i am changing the columns A,B,C,D for numbers so it will be easy to plot
titanic$boat<-gsub("C D","C",titanic$boat)
titanic$boat<-gsub("A","17",titanic$boat)
titanic$boat<-gsub("B","18",titanic$boat)
titanic$boat<-gsub("C","19",titanic$boat)
titanic$boat<-gsub("D","20",titanic$boat)
titanic$boat<-ifelse(titanic$boat=="","NA",titanic$boat)
titanic$boat<-as.numeric(titanic$boat)
levels(titanic$boat)
table(titanic$boat)
###SURVIVORS PER BOAT
survivorsperboat<-tapply(titanic$survived,titanic$boat,sum)
survivorsperboat<-as.data.frame(survivorsperboat)
survivorsperboat$boat<-table(titanic$boat)
survivorsperboat$deads<-as.numeric(survivorsperboat$boat-survivorsperboat$survivorsperboat)
frequency<-sum(survivorsperboat$deads)/sum(survivorsperboat$boat)
#some of the data that actually is categorical is coded as numeric, this code adds them ass categorical
titanic = mutate(titanic,passengerclass = fct_recode(as.factor(pclass),
"1st" = "1", "2nd" = "2", "3rd" = "3"),
survival = fct_recode(as.factor(survived),
"died"="0","survived" = "1"))
dim(titanic) #we now have 16 variables
names(titanic) #see the names
count(titanic,passengerclass) #count the number of passengers in each class
count(titanic,survival) #count the number of survived and died
count(titanic,sex) #count the number of men and women
tapply(titanic$fare, titanic$passengerclass, range,na.rm = TRUE)
summary(titanic$fare)
hist(titanic$fare)
View(titanic)
#barplot of men and women
ggplot(titanic) +
geom_bar(aes(x = sex,fill =sex))
count(titanic,sex,survival) #how many men survived/died and how many women survived/died
#plot of men and women and if the died or not
ggplot(titanic) +
geom_bar(aes(sex,fill=survival))
#for proportions instead
ggplot(titanic) +
geom_bar(aes(sex,fill = survival),position = "fill")
#mosaic plot
ggplot(titanic) +
geom_mosaic(aes(x = product(sex),fill = survival)) +
labs(x = "Gender",y = "Proportion that survived")
#one of the interesting things to check if wether the survival is different in the classes
ggplot(titanic) +
geom_bar(aes(sex,fill = survival), position = "fill") +
facet_wrap( ~ passengerclass) +
labs(y="Survived/lived", title = "Gender and survival by class")
#age distribution by sex
ggplot(titanic) +
geom_histogram(aes(x = age,fill = sex), bins = 35,na.rm = TRUE)
#fare distribution by class
ggplot(titanic) +
geom_histogram(aes(x = fare,fill = passengerclass), bins = 25,na.rm = TRUE)
#
titanic %>%
filter(!is.na(age)) %>%
ggplot() +
geom_jitter(aes(survived, age, color = sex), width = 0.1, alpha = 0.5)
#died and survived by age and gender
titanic %>%
filter(!is.na(age)) %>%
ggplot() +
geom_jitter(aes(survival, age, color = sex), width = 0.1, alpha = 0.5) +
facet_wrap(~sex)
#probability of surviving by age and gender
titanic %>%
filter(!is.na(age)) %>%
ggplot(aes(x = age, y = survived, color = sex)) +
geom_jitter(height = 0.05, alpha = 0.35) +
geom_smooth(method="glm", method.args = list(family="binomial"))  +
facet_wrap(~sex) +
labs(x = "Age", y = "Probability of survival")
#probability of surviving by age and gender broken down by passenger class
titanic %>%
filter(!is.na(age)) %>%
ggplot(aes(x = age, y = survived, color = sex)) +
geom_jitter(height = 0.05, alpha = 0.35) +
geom_smooth(method="glm", method.args = list(family="binomial"))  +
facet_grid(passengerclass~sex) +
labs(x = "Age", y = "Probability of survival")
#### create a data frame to identify families
library("data.table")
titanic2<-titanic[,c(2,6,7,9,8)]
unique(titanic$ticket)
titanic2<-as.data.table(titanic2)
families<-titanic2[,.(count=.N,price=sum(fare),surv=sum(survived)),by="ticket"]
##plot to see how the people was traveling
families$count<-as.numeric(families$count)
families$surv<-as.numeric(families$surv)
families<-subset(families,families$count>1)
scatter.smooth(families$surv,families$count)
install.packages("Rserve")
#load libraries
library(Rserve)
Rserve()
#load libraries
library(Rserve)
Rserve()
rm(list =ls()) #remove all objects
rm(list =ls()) #remove all objects
rm(list =ls()) #remove all objects
source('~/Documents/GitHub/R-Project/Fundamentals of statistics/Titanic exploration.r')
Rserve()
#load libraries
library(Rserve)
Rserve(port = 6311)
?Rserve()
#load libraries
library(Rserve)
Rserve(args="--no-save")
library(ggplot2)
library(readr)
library(dplyr)
library(tidyr)
library(forcats)
library(ggmosaic)
rm(list =ls()) #remove all objects
#load libraries
library(Rserve)
Rserve(args="--no-save")
library(ggplot2)
library(readr)
library(dplyr)
library(tidyr)
library(forcats)
library(ggmosaic)
titanic = read.csv("titanic.csv",header = TRUE,sep = ";") #read the datafile
titanic = titanic[-nrow(titanic),] #remove last line that is only NA
titanic$age = as.vector(titanic$age) #make age to a vector
titanic$age[titanic$age == ""] = NA #remove the empty strings for age and replace with NA
titanic$age = gsub(",",".",titanic$age) #change the seperator to . instead of ,
titanic$age = as.numeric(titanic$age) #change the vector to numeric
titanic$age = round(titanic$age) #round up
titanic$fare = gsub(",",".",titanic$fare) #change seperator
titanic$fare = as.vector(titanic$fare) #make into a vector
titanic$fare[titanic$fare == ""] = NA #make missing values NA
titanic$fare = as.numeric(titanic$fare) #make numeric
class(titanic$fare)
#cleaning the mistakes in boats
titanic$boat<-gsub("13 15","13",titanic$boat)
titanic$boat<-gsub("13 15 B","13",titanic$boat)
titanic$boat<-gsub("13 B","13",titanic$boat)
titanic$boat<-gsub("5 7","5",titanic$boat)
titanic$boat<-gsub("5 9","9",titanic$boat)
titanic$boat<-gsub("15 16","15",titanic$boat)
titanic$boat<-gsub("8 10","8",titanic$boat)
#i am changing the columns A,B,C,D for numbers so it will be easy to plot
titanic$boat<-gsub("C D","C",titanic$boat)
titanic$boat<-gsub("A","17",titanic$boat)
titanic$boat<-gsub("B","18",titanic$boat)
titanic$boat<-gsub("C","19",titanic$boat)
titanic$boat<-gsub("D","20",titanic$boat)
titanic$boat<-ifelse(titanic$boat=="","NA",titanic$boat)
titanic$boat<-as.numeric(titanic$boat)
levels(titanic$boat)
table(titanic$boat)
###SURVIVORS PER BOAT
survivorsperboat<-tapply(titanic$survived,titanic$boat,sum)
survivorsperboat<-as.data.frame(survivorsperboat)
survivorsperboat$boat<-table(titanic$boat)
survivorsperboat$deads<-as.numeric(survivorsperboat$boat-survivorsperboat$survivorsperboat)
frequency<-sum(survivorsperboat$deads)/sum(survivorsperboat$boat)
#some of the data that actually is categorical is coded as numeric, this code adds them ass categorical
titanic = mutate(titanic,passengerclass = fct_recode(as.factor(pclass),
"1st" = "1", "2nd" = "2", "3rd" = "3"),
survival = fct_recode(as.factor(survived),
"died"="0","survived" = "1"))
dim(titanic) #we now have 16 variables
names(titanic) #see the names
count(titanic,passengerclass) #count the number of passengers in each class
count(titanic,survival) #count the number of survived and died
count(titanic,sex) #count the number of men and women
tapply(titanic$fare, titanic$passengerclass, range,na.rm = TRUE)
summary(titanic$fare)
hist(titanic$fare)
View(titanic)
#barplot of men and women
ggplot(titanic) +
geom_bar(aes(x = sex,fill =sex))
count(titanic,sex,survival) #how many men survived/died and how many women survived/died
#plot of men and women and if the died or not
ggplot(titanic) +
geom_bar(aes(sex,fill=survival))
#for proportions instead
ggplot(titanic) +
geom_bar(aes(sex,fill = survival),position = "fill")
#mosaic plot
ggplot(titanic) +
geom_mosaic(aes(x = product(sex),fill = survival)) +
labs(x = "Gender",y = "Proportion that survived")
#one of the interesting things to check if wether the survival is different in the classes
ggplot(titanic) +
geom_bar(aes(sex,fill = survival), position = "fill") +
facet_wrap( ~ passengerclass) +
labs(y="Survived/lived", title = "Gender and survival by class")
#age distribution by sex
ggplot(titanic) +
geom_histogram(aes(x = age,fill = sex), bins = 35,na.rm = TRUE)
#fare distribution by class
ggplot(titanic) +
geom_histogram(aes(x = fare,fill = passengerclass), bins = 25,na.rm = TRUE)
#
titanic %>%
filter(!is.na(age)) %>%
ggplot() +
geom_jitter(aes(survived, age, color = sex), width = 0.1, alpha = 0.5)
#died and survived by age and gender
titanic %>%
filter(!is.na(age)) %>%
ggplot() +
geom_jitter(aes(survival, age, color = sex), width = 0.1, alpha = 0.5) +
facet_wrap(~sex)
#probability of surviving by age and gender
titanic %>%
filter(!is.na(age)) %>%
ggplot(aes(x = age, y = survived, color = sex)) +
geom_jitter(height = 0.05, alpha = 0.35) +
geom_smooth(method="glm", method.args = list(family="binomial"))  +
facet_wrap(~sex) +
labs(x = "Age", y = "Probability of survival")
#probability of surviving by age and gender broken down by passenger class
titanic %>%
filter(!is.na(age)) %>%
ggplot(aes(x = age, y = survived, color = sex)) +
geom_jitter(height = 0.05, alpha = 0.35) +
geom_smooth(method="glm", method.args = list(family="binomial"))  +
facet_grid(passengerclass~sex) +
labs(x = "Age", y = "Probability of survival")
#### create a data frame to identify families
library("data.table")
titanic2<-titanic[,c(2,6,7,9,8)]
unique(titanic$ticket)
titanic2<-as.data.table(titanic2)
families<-titanic2[,.(count=.N,price=sum(fare),surv=sum(survived)),by="ticket"]
##plot to see how the people was traveling
families$count<-as.numeric(families$count)
families$surv<-as.numeric(families$surv)
families<-subset(families,families$count>1)
scatter.smooth(families$surv,families$count)
View(survivorsperboat)
View(families)
View(titanic2)
View(titanic2)
View(titanic)
install.packages("flexdashboard")
source('~/Documents/GitHub/R-Project/Fundamentals of statistics/Titanic exploration.r')
library(flexdashboard)
#load libraries
library(ggplot2)
library(readr)
library(dplyr)
library(tidyr)
library(forcats)
library(ggmosaic)
---
title: "Test"
author: "Ruben Martinez"
output:
flexdashboard::flex_dashboard:
orientation: rows
social: menu
source_code: embed
---
install.packages("shiny")
library(shiny)
runExample("01_hello")
